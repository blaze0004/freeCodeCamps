{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Utils } from \"../../shared/Utils\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [answer, setAnswer] = useState('');\n  const [expression, setExpression] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleCancel = () => {\n    setAnswer('');\n    setExpression('');\n  };\n\n  const handleNumber = value => {\n    setExpression(prev => prev + value);\n  };\n\n  const handleDecimal = () => {\n    setExpression(prev => expression.includes('.') ? prev : prev + '.');\n  };\n\n  const handleMathOperator = value => {\n    if (value === '-') {\n      if (expression.length && expression[expression.length - 1] === '-') {\n        setAnswer(prev => prev + expression);\n      }\n    }\n\n    setExpression(value);\n  };\n\n  const handleEqual = () => {};\n\n  const handleClick = value => {\n    if (Utils.isCancel(value)) {\n      handleCancel();\n    } else if (Utils.isNumber(value)) {\n      handleNumber(value);\n    } else if (Utils.isDecimal(value)) {\n      handleDecimal();\n    } else if (Utils.isMathOperator(value)) {\n      handleMathOperator(value);\n    } else if (Utils.isEqualOperator(value)) {\n      handleEqual();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      answer: answer,\n      expression: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"4srfLYttdgLmlhE6/Nvxo4F23RA=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useState","Utils","DisplayPanel","InputPanel","Calculator","answer","setAnswer","expression","setExpression","result","setResult","handleCancel","handleNumber","value","prev","handleDecimal","includes","handleMathOperator","length","handleEqual","handleClick","isCancel","isNumber","isDecimal","isMathOperator","isEqualOperator"],"mappings":";;;AAAA,SAA4BA,QAA5B,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzBL,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAHD;;AAKA,QAAMI,YAAY,GAAIC,KAAD,IAAmB;AACtCL,IAAAA,aAAa,CAACM,IAAI,IAAIA,IAAI,GAAGD,KAAhB,CAAb;AACD,GAFD;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1BP,IAAAA,aAAa,CAACM,IAAI,IAAIP,UAAU,CAACS,QAAX,CAAoB,GAApB,IAA2BF,IAA3B,GAAkCA,IAAI,GAAG,GAAlD,CAAb;AACD,GAFD;;AAIA,QAAMG,kBAAkB,GAAIJ,KAAD,IAAmB;AAC5C,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,UAAIN,UAAU,CAACW,MAAX,IAAqBX,UAAU,CAACA,UAAU,CAACW,MAAX,GAAoB,CAArB,CAAV,KAAsC,GAA/D,EAAoE;AAClEZ,QAAAA,SAAS,CAACQ,IAAI,IAAIA,IAAI,GAAGP,UAAhB,CAAT;AACD;AACF;;AACDC,IAAAA,aAAa,CAACK,KAAD,CAAb;AACD,GAPD;;AASA,QAAMM,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,WAAW,GAAIP,KAAD,IAAmB;AACrC,QAAIZ,KAAK,CAACoB,QAAN,CAAeR,KAAf,CAAJ,EAA2B;AACzBF,MAAAA,YAAY;AACb,KAFD,MAEO,IAAIV,KAAK,CAACqB,QAAN,CAAeT,KAAf,CAAJ,EAA2B;AAChCD,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,KAFM,MAEA,IAAIZ,KAAK,CAACsB,SAAN,CAAgBV,KAAhB,CAAJ,EAA4B;AACjCE,MAAAA,aAAa;AACd,KAFM,MAEA,IAAId,KAAK,CAACuB,cAAN,CAAqBX,KAArB,CAAJ,EAAiC;AACtCI,MAAAA,kBAAkB,CAACJ,KAAD,CAAlB;AACD,KAFM,MAEA,IAAIZ,KAAK,CAACwB,eAAN,CAAsBZ,KAAtB,CAAJ,EAAkC;AACvCM,MAAAA,WAAW;AACZ;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEd,MAAtB;AAA8B,MAAA,UAAU,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEa;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjDD;;GAAMhB,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [answer, setAnswer] = useState('');\r\n  const [expression, setExpression] = useState('');\r\n  const [result, setResult] = useState('')\r\n\r\n  const handleCancel = () => {\r\n    setAnswer('');\r\n    setExpression('');\r\n  }\r\n\r\n  const handleNumber = (value: string) => {\r\n    setExpression(prev => prev + value);\r\n  }\r\n\r\n  const handleDecimal = () => {\r\n    setExpression(prev => expression.includes('.') ? prev : prev + '.');\r\n  }\r\n\r\n  const handleMathOperator = (value: string) => {\r\n    if (value === '-') {\r\n      if (expression.length && expression[expression.length - 1] === '-') {\r\n        setAnswer(prev => prev + expression)\r\n      }\r\n    }\r\n    setExpression(value);\r\n  }\r\n\r\n  const handleEqual = () => {}\r\n\r\n  const handleClick = (value: string) => {\r\n    if (Utils.isCancel(value)) {\r\n      handleCancel();\r\n    } else if (Utils.isNumber(value)) {\r\n      handleNumber(value);\r\n    } else if (Utils.isDecimal(value)) {\r\n      handleDecimal();\r\n    } else if (Utils.isMathOperator(value)) {\r\n      handleMathOperator(value);\r\n    } else if (Utils.isEqualOperator(value)) {\r\n      handleEqual();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel answer={answer} expression={expression} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}