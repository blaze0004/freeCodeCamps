{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\InputPanel\\\\InputPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport InputButton from \"./InputButton/InputButton\";\nimport \"./InputPanel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputPanel = props => {\n  _s();\n\n  const buttons = useMemo(() => [{\n    onClick: props.onClick,\n    text: \"AC\",\n    value: \"AC\",\n    id: \"clear\"\n  }, {\n    onClick: props.onClick,\n    text: \"/\",\n    value: \"/\",\n    id: \"divide\"\n  }, {\n    onClick: props.onClick,\n    text: \"*\",\n    value: \"*\",\n    id: \"multiply\"\n  }, {\n    onClick: props.onClick,\n    text: \"9\",\n    value: \"9\",\n    id: \"nine\"\n  }, {\n    onClick: props.onClick,\n    text: \"8\",\n    value: \"8\",\n    id: \"eight\"\n  }, {\n    onClick: props.onClick,\n    text: \"7\",\n    value: \"7\",\n    id: \"seven\"\n  }, {\n    onClick: props.onClick,\n    text: \"-\",\n    value: \"-\",\n    id: \"minus\"\n  }, {\n    onClick: props.onClick,\n    text: \"4\",\n    value: \"4\",\n    id: \"four\"\n  }, {\n    onClick: props.onClick,\n    text: \"5\",\n    value: \"5\",\n    id: \"five\"\n  }, {\n    onClick: props.onClick,\n    text: \"6\",\n    value: \"6\",\n    id: \"six\"\n  }, {\n    onClick: props.onClick,\n    text: \"+\",\n    value: \"+\",\n    id: \"plus\"\n  }, {\n    onClick: props.onClick,\n    text: \"1\",\n    value: \"1\",\n    id: \"one\"\n  }, {\n    onClick: props.onClick,\n    text: \"2\",\n    value: \"2\",\n    id: \"two\"\n  }, {\n    onClick: props.onClick,\n    text: \"3\",\n    value: \"3\",\n    id: \"three\"\n  }, {\n    onClick: props.onClick,\n    text: \"=\",\n    value: \"=\",\n    id: \"equal\"\n  }, {\n    onClick: props.onClick,\n    text: \"0\",\n    value: \"0\",\n    id: \"zero\"\n  }, {\n    onClick: props.onClick,\n    text: \".\",\n    value: \".\",\n    id: \"decimal\"\n  }], [props.onClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-panel-buttons\",\n      children: buttons.map(x => /*#__PURE__*/_jsxDEV(InputButton, { ...x\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputPanel, \"87c9iPDnbu91q0K2V7bS2OnZLPU=\");\n\n_c = InputPanel;\nexport default InputPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPanel\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/InputPanel/InputPanel.tsx"],"names":["useMemo","InputButton","InputPanel","props","buttons","onClick","text","value","id","map","x"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\";\r\nimport InputButton, { InputButtonProps } from \"./InputButton/InputButton\";\r\nimport \"./InputPanel.css\";\r\n\r\nconst InputPanel: React.FC<InputPanelProps> = (props) => {\r\n  const buttons = useMemo(\r\n    (): InputButtonProps[] => [\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"AC\",\r\n        value: \"AC\",\r\n        id: \"clear\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"/\",\r\n        value: \"/\",\r\n        id: \"divide\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"*\",\r\n        value: \"*\",\r\n        id: \"multiply\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"9\",\r\n        value: \"9\",\r\n        id: \"nine\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"8\",\r\n        value: \"8\",\r\n        id: \"eight\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"7\",\r\n        value: \"7\",\r\n        id: \"seven\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"-\",\r\n        value: \"-\",\r\n        id: \"minus\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"4\",\r\n        value: \"4\",\r\n        id: \"four\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"5\",\r\n        value: \"5\",\r\n        id: \"five\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"6\",\r\n        value: \"6\",\r\n        id: \"six\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"+\",\r\n        value: \"+\",\r\n        id: \"plus\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"1\",\r\n        value: \"1\",\r\n        id: \"one\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"2\",\r\n        value: \"2\",\r\n        id: \"two\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"3\",\r\n        value: \"3\",\r\n        id: \"three\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"=\",\r\n        value: \"=\",\r\n        id: \"equal\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"0\",\r\n        value: \"0\",\r\n        id: \"zero\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \".\",\r\n        value: \".\",\r\n        id: \"decimal\",\r\n      },\r\n    ],\r\n    [props.onClick]\r\n  );\r\n  return (\r\n    <div className=\"input-panel\">\r\n      <div className=\"input-panel-buttons\">\r\n        {buttons.map((x) => (\r\n          <InputButton key={x.id} {...x} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InputPanelProps {\r\n  onClick: (value: string) => void;\r\n}\r\n\r\nexport default InputPanel;\r\n"]},"metadata":{},"sourceType":"module"}