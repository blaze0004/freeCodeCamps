{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Utils } from \"../../shared/Utils\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [resultHistory, setResultHistory] = useState(0);\n  const [result, setResult] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n\n  const handleClick = value => {\n    if (Utils.isDecimal(value) && input.includes(\".\") || result.includes(\".\")) {\n      return;\n    } // if (isEqualOperator(value)) {\n    //   const ans = calculate();\n    //   console.log(result, ans);\n    //   setResult((prev) => `${prev}=${ans}`);\n    // } else if (isNumber(value) || (isDecimal(value) && isNumber(input))) {\n    //   setInput((prev) => prev + value);\n    // } else if (input === \"0\") {\n    //   setInput(value);\n    // } else if (isMathOperator(value)) {\n    //   applyOperator(value);\n    // } else if (isCancel(value)) {\n    //   setInput(\"0\");\n    //   setResult(\"\");\n    // }\n\n\n    if (Utils.isEqualOperator(value)) {\n      calculate();\n    } else if (Utils.isCancel(value)) {\n      setInput('0');\n      setResult('');\n    } else if (Utils.isMathOperator(value)) {\n      setResult(prev => input + value);\n      setInput(value);\n    } else {\n      setInput(prev => prev + value);\n    }\n  };\n\n  const calculate = () => {\n    const ans = eval(result);\n    setResult(prev => `${prev}=${ans}`);\n  };\n\n  const applyOperator = operator => {\n    if (Utils.isNumber(result)) {\n      setResult(prev => `${prev}${operator}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      input: input,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"mCLHqlEINfuPz4qt7AUneVOJOPY=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useState","Utils","DisplayPanel","InputPanel","Calculator","resultHistory","setResultHistory","result","setResult","input","setInput","handleClick","value","isDecimal","includes","isEqualOperator","calculate","isCancel","isMathOperator","prev","ans","eval","applyOperator","operator","isNumber"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,GAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAIC,KAAD,IAAmB;AACrC,QAAKX,KAAK,CAACY,SAAN,CAAgBD,KAAhB,KAA0BH,KAAK,CAACK,QAAN,CAAe,GAAf,CAA3B,IAAmDP,MAAM,CAACO,QAAP,CAAgB,GAAhB,CAAvD,EAA6E;AAC3E;AACD,KAHoC,CAIrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAIb,KAAK,CAACc,eAAN,CAAsBH,KAAtB,CAAJ,EAAkC;AAC9BI,MAAAA,SAAS;AACZ,KAFD,MAEO,IAAIf,KAAK,CAACgB,QAAN,CAAeL,KAAf,CAAJ,EAA2B;AAC9BF,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAHM,MAGA,IAAIP,KAAK,CAACiB,cAAN,CAAqBN,KAArB,CAAJ,EAAiC;AACpCJ,MAAAA,SAAS,CAACW,IAAI,IAAIV,KAAK,GAAGG,KAAjB,CAAT;AACAF,MAAAA,QAAQ,CAACE,KAAD,CAAR;AACH,KAHM,MAGA;AACHF,MAAAA,QAAQ,CAACS,IAAI,IAAIA,IAAI,GAAGP,KAAhB,CAAR;AACH;AACF,GA9BD;;AAiCA,QAAMI,SAAS,GAAG,MAAM;AACtB,UAAMI,GAAG,GAAGC,IAAI,CAACd,MAAD,CAAhB;AACAC,IAAAA,SAAS,CAAEW,IAAD,IAAW,GAAEA,IAAK,IAAGC,GAAI,EAA1B,CAAT;AACD,GAHD;;AAKA,QAAME,aAAa,GAAIC,QAAD,IAAsB;AAC1C,QAAItB,KAAK,CAACuB,QAAN,CAAejB,MAAf,CAAJ,EAA4B;AAC1BC,MAAAA,SAAS,CAAEW,IAAD,IAAW,GAAEA,IAAK,GAAEI,QAAS,EAA9B,CAAT;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEd,KAArB;AAA4B,MAAA,MAAM,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvDD;;GAAMP,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [resultHistory, setResultHistory] = useState(0);\r\n  const [result, setResult] = useState(\"\");\r\n  const [input, setInput] = useState(\"0\");\r\n\r\n  const handleClick = (value: string) => {\r\n    if ((Utils.isDecimal(value) && input.includes(\".\")) || result.includes(\".\")) {\r\n      return;\r\n    }\r\n    // if (isEqualOperator(value)) {\r\n    //   const ans = calculate();\r\n    //   console.log(result, ans);\r\n    //   setResult((prev) => `${prev}=${ans}`);\r\n    // } else if (isNumber(value) || (isDecimal(value) && isNumber(input))) {\r\n    //   setInput((prev) => prev + value);\r\n    // } else if (input === \"0\") {\r\n    //   setInput(value);\r\n    // } else if (isMathOperator(value)) {\r\n    //   applyOperator(value);\r\n    // } else if (isCancel(value)) {\r\n    //   setInput(\"0\");\r\n    //   setResult(\"\");\r\n    // }\r\n\r\n    if (Utils.isEqualOperator(value)) {\r\n        calculate();\r\n    } else if (Utils.isCancel(value)) {\r\n        setInput('0');\r\n        setResult('');\r\n    } else if (Utils.isMathOperator(value)) {\r\n        setResult(prev => input + value);\r\n        setInput(value);\r\n    } else {\r\n        setInput(prev => prev + value);\r\n    }\r\n  };\r\n\r\n  \r\n  const calculate = () => {\r\n    const ans = eval(result);\r\n    setResult((prev) => `${prev}=${ans}`);\r\n  };\r\n\r\n  const applyOperator = (operator: string) => {\r\n    if (Utils.isNumber(result)) {\r\n      setResult((prev) => `${prev}${operator}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} result={result} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}