{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Utils } from \"../../shared/Utils\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [input, setInput] = useState(\"3 + 5 * 6 - 2 / 4\");\n  const prevResult = useRef('');\n  useEffect(() => {\n    prevResult.current = results.length ? results[results.length - 1].split(\"=\")[1] : '';\n    setInput(prevResult.current);\n  }, [results]);\n\n  const handleClick = value => {\n    if (Utils.isCancel(value)) {\n      setInput(\"0\");\n      setResults([]);\n    } else if (Utils.isNumber(value)) {\n      setInput(prev => prev.length === 1 && prev === \"0\" ? value : prev + value);\n    } else if (Utils.isDecimal(value)) {\n      const hasNoOperatorOrDecimal = !Utils.MATH_OPERATORS.some(x => input.includes(x)) && !input.includes(\".\");\n\n      if (hasNoOperatorOrDecimal) {\n        setInput(prev => prev + value);\n        return;\n      }\n\n      const lastIndexOfOperator = Math.max(...Utils.MATH_OPERATORS.map(x => input.lastIndexOf(x)));\n      const lastIndexOfDecimal = input.lastIndexOf(\".\");\n\n      if (lastIndexOfDecimal < lastIndexOfOperator) {\n        setInput(prev => prev + value);\n        return;\n      }\n    } else if (Utils.isMathOperator(value)) {\n      setInput(prevValue => {\n        const isPreviousAlsoMathOperator = Utils.isMathOperator(prevValue[prevValue.length - 1]);\n        const isSubtractOperator = value === \"-\";\n\n        if (isPreviousAlsoMathOperator && !isSubtractOperator) {\n          const newInput = prevValue.substring(0, prevValue.length - 1) + value;\n          return newInput;\n        } else {\n          return prevValue + value;\n        }\n      });\n    } else if (Utils.isEqualOperator(value)) {\n      let validInput = input;\n      const isLastInputIsMathOperator = Utils.isMathOperator(input[input.length - 1]);\n\n      if (isLastInputIsMathOperator) {\n        validInput = input.substring(0, input.length - 1);\n        setInput(validInput);\n      }\n\n      setResults(prev => prev.concat([validInput + \"=\" + Utils.calculate(validInput)]));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      input: input,\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"9MW1zx2qlCcJciGBpJF8NlZQrGk=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useEffect","useRef","useState","Utils","DisplayPanel","InputPanel","Calculator","results","setResults","input","setInput","prevResult","current","length","split","handleClick","value","isCancel","isNumber","prev","isDecimal","hasNoOperatorOrDecimal","MATH_OPERATORS","some","x","includes","lastIndexOfOperator","Math","max","map","lastIndexOf","lastIndexOfDecimal","isMathOperator","prevValue","isPreviousAlsoMathOperator","isSubtractOperator","newInput","substring","isEqualOperator","validInput","isLastInputIsMathOperator","concat","calculate"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,mBAAD,CAAlC;AACA,QAAMS,UAAU,GAAGV,MAAM,CAAC,EAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAACC,OAAX,GAAqBL,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACA,OAAO,CAACM,MAAR,GAAiB,CAAlB,CAAP,CAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAjB,GAA6D,EAAlF;AACAJ,IAAAA,QAAQ,CAACC,UAAU,CAACC,OAAZ,CAAR;AACD,GAHQ,EAGN,CAACL,OAAD,CAHM,CAAT;;AAKA,QAAMQ,WAAW,GAAIC,KAAD,IAAmB;AACrC,QAAIb,KAAK,CAACc,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACzBN,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAHD,MAGO,IAAIL,KAAK,CAACe,QAAN,CAAeF,KAAf,CAAJ,EAA2B;AAChCN,MAAAA,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACN,MAAL,KAAgB,CAAhB,IAAqBM,IAAI,KAAK,GAA9B,GAAoCH,KAApC,GAA4CG,IAAI,GAAGH,KAD7C,CAAR;AAGD,KAJM,MAIA,IACLb,KAAK,CAACiB,SAAN,CAAgBJ,KAAhB,CADK,EAEL;AACA,YAAMK,sBAAsB,GAAI,CAAClB,KAAK,CAACmB,cAAN,CAAqBC,IAArB,CAA2BC,CAAD,IAAOf,KAAK,CAACgB,QAAN,CAAeD,CAAf,CAAjC,CAAD,IAAwD,CAACf,KAAK,CAACgB,QAAN,CAAe,GAAf,CAAzF;;AAEA,UAAIJ,sBAAJ,EAA4B;AAC1BX,QAAAA,QAAQ,CAAES,IAAD,IAAUA,IAAI,GAAGH,KAAlB,CAAR;AACA;AACD;;AAED,YAAMU,mBAAmB,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGzB,KAAK,CAACmB,cAAN,CAAqBO,GAArB,CAAyBL,CAAC,IAAIf,KAAK,CAACqB,WAAN,CAAkBN,CAAlB,CAA9B,CAAZ,CAA5B;AACA,YAAMO,kBAAkB,GAAGtB,KAAK,CAACqB,WAAN,CAAkB,GAAlB,CAA3B;;AACA,UAAKC,kBAAkB,GAAGL,mBAA1B,EAAgD;AAC9ChB,QAAAA,QAAQ,CAAES,IAAD,IAAUA,IAAI,GAAGH,KAAlB,CAAR;AACA;AACD;AACF,KAhBM,MAgBA,IAAIb,KAAK,CAAC6B,cAAN,CAAqBhB,KAArB,CAAJ,EAAiC;AACtCN,MAAAA,QAAQ,CAAEuB,SAAD,IAAe;AACtB,cAAMC,0BAA0B,GAAG/B,KAAK,CAAC6B,cAAN,CACjCC,SAAS,CAACA,SAAS,CAACpB,MAAV,GAAmB,CAApB,CADwB,CAAnC;AAIA,cAAMsB,kBAAkB,GAAGnB,KAAK,KAAK,GAArC;;AACA,YAAIkB,0BAA0B,IAAI,CAACC,kBAAnC,EAAuD;AACrD,gBAAMC,QAAQ,GAAGH,SAAS,CAACI,SAAV,CAAoB,CAApB,EAAuBJ,SAAS,CAACpB,MAAV,GAAmB,CAA1C,IAA+CG,KAAhE;AACA,iBAAOoB,QAAP;AACD,SAHD,MAGO;AACL,iBAAOH,SAAS,GAAGjB,KAAnB;AACD;AACF,OAZO,CAAR;AAaD,KAdM,MAcA,IAAIb,KAAK,CAACmC,eAAN,CAAsBtB,KAAtB,CAAJ,EAAkC;AACvC,UAAIuB,UAAU,GAAG9B,KAAjB;AACA,YAAM+B,yBAAyB,GAAGrC,KAAK,CAAC6B,cAAN,CAChCvB,KAAK,CAACA,KAAK,CAACI,MAAN,GAAe,CAAhB,CAD2B,CAAlC;;AAIA,UAAI2B,yBAAJ,EAA+B;AAC7BD,QAAAA,UAAU,GAAG9B,KAAK,CAAC4B,SAAN,CAAgB,CAAhB,EAAmB5B,KAAK,CAACI,MAAN,GAAe,CAAlC,CAAb;AACAH,QAAAA,QAAQ,CAAC6B,UAAD,CAAR;AACD;;AACD/B,MAAAA,UAAU,CAACW,IAAI,IAAIA,IAAI,CAACsB,MAAL,CAAY,CAACF,UAAU,GAAG,GAAb,GAAmBpC,KAAK,CAACuC,SAAN,CAAgBH,UAAhB,CAApB,CAAZ,CAAT,CAAV;AACD;AACF,GAlDD;;AAoDA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE9B,KAArB;AAA4B,MAAA,OAAO,EAAEF;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApED;;GAAMT,U;;KAAAA,U;AAsEN,eAAeA,UAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [results, setResults] = useState<string[]>([]);\r\n  const [input, setInput] = useState(\"3 + 5 * 6 - 2 / 4\");\r\n  const prevResult = useRef('');\r\n\r\n  useEffect(() => {\r\n    prevResult.current = results.length ? results[results.length - 1].split(\"=\")[1] : '';\r\n    setInput(prevResult.current);\r\n  }, [results])\r\n\r\n  const handleClick = (value: string) => {\r\n    if (Utils.isCancel(value)) {\r\n      setInput(\"0\");\r\n      setResults([]);\r\n    } else if (Utils.isNumber(value)) {\r\n      setInput((prev) =>\r\n        prev.length === 1 && prev === \"0\" ? value : prev + value\r\n      );\r\n    } else if (\r\n      Utils.isDecimal(value)\r\n    ) {\r\n      const hasNoOperatorOrDecimal = (!Utils.MATH_OPERATORS.some((x) => input.includes(x)) && !input.includes(\".\"));\r\n\r\n      if (hasNoOperatorOrDecimal) {\r\n        setInput((prev) => prev + value);\r\n        return;\r\n      }\r\n\r\n      const lastIndexOfOperator = Math.max(...Utils.MATH_OPERATORS.map(x => input.lastIndexOf(x)));\r\n      const lastIndexOfDecimal = input.lastIndexOf(\".\");\r\n      if ((lastIndexOfDecimal < lastIndexOfOperator)) {\r\n        setInput((prev) => prev + value);\r\n        return;\r\n      }\r\n    } else if (Utils.isMathOperator(value)) {\r\n      setInput((prevValue) => {\r\n        const isPreviousAlsoMathOperator = Utils.isMathOperator(\r\n          prevValue[prevValue.length - 1]\r\n        );\r\n\r\n        const isSubtractOperator = value === \"-\";\r\n        if (isPreviousAlsoMathOperator && !isSubtractOperator) {\r\n          const newInput = prevValue.substring(0, prevValue.length - 1) + value;\r\n          return newInput;\r\n        } else {\r\n          return prevValue + value;\r\n        }\r\n      });\r\n    } else if (Utils.isEqualOperator(value)) {\r\n      let validInput = input;\r\n      const isLastInputIsMathOperator = Utils.isMathOperator(\r\n        input[input.length - 1]\r\n      );\r\n      \r\n      if (isLastInputIsMathOperator) {\r\n        validInput = input.substring(0, input.length - 1);\r\n        setInput(validInput);\r\n      }\r\n      setResults(prev => prev.concat([validInput + \"=\" + Utils.calculate(validInput)]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} results={results} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}