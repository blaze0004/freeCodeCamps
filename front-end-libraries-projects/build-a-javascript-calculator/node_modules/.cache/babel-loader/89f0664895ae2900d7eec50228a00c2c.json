{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Utils } from \"../../shared/Utils\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [answer, setAnswer] = useState('');\n  const [expression, setExpression] = useState('');\n  const [input, setInput] = useState('');\n\n  const handleCancel = () => {\n    setAnswer('');\n    setExpression('');\n    setInput('');\n  };\n\n  const handleNumber = value => {\n    if (answer) {\n      setInput(value);\n      setExpression(value);\n      setAnswer('');\n    } else {\n      setInput(prev => prev.includes('.') || prev.length > 1 && Utils.isNumber(prev[prev.length - 1]) ? prev + value : value);\n      setExpression(prev => prev + value);\n    }\n  };\n\n  const handleDecimal = () => {\n    const hasNoOperatorOrDecimal = !Utils.MATH_OPERATORS.some(x => expression.includes(x)) && !expression.includes(\".\");\n\n    if (hasNoOperatorOrDecimal) {\n      setExpression(prev => prev + '.');\n      setInput(prev => Utils.isNumber(prev[prev.length - 1]) ? prev + '.' : '.');\n      return;\n    }\n\n    const lastIndexOfOperator = Math.max(...Utils.MATH_OPERATORS.map(x => expression.lastIndexOf(x)));\n    const lastIndexOfDecimal = expression.lastIndexOf(\".\");\n\n    if (lastIndexOfDecimal < lastIndexOfOperator) {\n      setExpression(prev => prev + '.');\n      setInput(prev => Utils.isNumber(prev[prev.length - 1]) ? prev + '.' : '.');\n    }\n  };\n\n  const handleMathOperator = value => {\n    if (answer) {\n      setExpression(answer + value);\n      setInput(value);\n      setAnswer('');\n      return;\n    }\n\n    if (value === '-') {\n      if (expression.length) {\n        if (expression.length >= 2 && Utils.isMathOperator(expression[expression.length - 1]) && Utils.isMathOperator(expression[expression.length - 2])) {\n          setExpression(prev => prev.substring(0, prev.length - 1) + value);\n        } else {\n          setExpression(prev => prev + value);\n        }\n      } else {\n        setExpression(prev => prev + value);\n      }\n    } else {\n      if (expression.length >= 2 && Utils.isMathOperator(expression[expression.length - 2]) && expression[expression.length - 1] === '-') {\n        setExpression(prev => prev.substring(0, prev.length - 2) + value);\n      } else if (Utils.isMathOperator(expression[expression.length - 1])) {\n        setExpression(prev => prev.substring(0, prev.length - 1) + value);\n      } else {\n        setExpression(prev => prev + value);\n      }\n    }\n\n    setInput(value);\n  };\n\n  const handleEqual = () => {\n    let result = '';\n\n    if (expression.length && Utils.isMathOperator(expression[expression.length - 1])) {\n      setExpression(prev => prev.substring(0, prev.length - 1));\n      result = expression.substring(0, expression.length - 1);\n    } else {\n      result = Utils.calculate(expression);\n    }\n\n    setAnswer(result);\n    setInput(result);\n  };\n\n  const handleClick = value => {\n    if (Utils.isCancel(value)) {\n      handleCancel();\n    } else if (Utils.isNumber(value)) {\n      handleNumber(value);\n    } else if (Utils.isDecimal(value)) {\n      handleDecimal();\n    } else if (Utils.isMathOperator(value)) {\n      handleMathOperator(value);\n    } else if (Utils.isEqualOperator(value)) {\n      handleEqual();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      input: input,\n      answer: answer,\n      expression: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"hhSpUCFx5kc3xve49VLEw9p3fEI=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useState","Utils","DisplayPanel","InputPanel","Calculator","answer","setAnswer","expression","setExpression","input","setInput","handleCancel","handleNumber","value","prev","includes","length","isNumber","handleDecimal","hasNoOperatorOrDecimal","MATH_OPERATORS","some","x","lastIndexOfOperator","Math","max","map","lastIndexOf","lastIndexOfDecimal","handleMathOperator","isMathOperator","substring","handleEqual","result","calculate","handleClick","isCancel","isDecimal","isEqualOperator"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [answer, setAnswer] = useState('');\r\n  const [expression, setExpression] = useState('');\r\n  const [input, setInput] = useState('')\r\n\r\n  const handleCancel = () => {\r\n    setAnswer('');\r\n    setExpression('');\r\n    setInput('');\r\n  }\r\n\r\n  const handleNumber = (value: string) => {\r\n    if (answer) {\r\n      setInput(value);\r\n      setExpression(value);\r\n      setAnswer('');\r\n    } else {\r\n      setInput(prev => (prev.includes('.') || (prev.length > 1 && Utils.isNumber(prev[prev.length - 1]))) ? prev + value : value);\r\n      setExpression(prev => prev + value);\r\n    }\r\n  }\r\n\r\n  const handleDecimal = () => {\r\n    const hasNoOperatorOrDecimal = (!Utils.MATH_OPERATORS.some((x) => expression.includes(x)) && !expression.includes(\".\"));\r\n\r\n    if (hasNoOperatorOrDecimal) {\r\n      setExpression((prev) => prev + '.');\r\n      setInput(prev => Utils.isNumber(prev[prev.length - 1]) ? prev + '.' : '.');\r\n      return;\r\n    }\r\n\r\n    const lastIndexOfOperator = Math.max(...Utils.MATH_OPERATORS.map(x => expression.lastIndexOf(x)));\r\n    const lastIndexOfDecimal = expression.lastIndexOf(\".\");\r\n    if ((lastIndexOfDecimal < lastIndexOfOperator)) {\r\n      setExpression((prev) => prev + '.');\r\n      setInput(prev => Utils.isNumber(prev[prev.length - 1]) ? prev + '.' : '.');\r\n    } \r\n  }\r\n\r\n  const handleMathOperator = (value: string) => {\r\n    if (answer) {\r\n      setExpression(answer + value);\r\n      setInput(value);\r\n      setAnswer('');\r\n      return;\r\n    }\r\n    if (value === '-') {\r\n      if (expression.length) {\r\n        if (expression.length >= 2 && Utils.isMathOperator(expression[expression.length - 1]) && Utils.isMathOperator(expression[expression.length - 2])) {\r\n          setExpression(prev => prev.substring(0, prev.length - 1) + value);\r\n        } else {\r\n          setExpression(prev => prev + value);\r\n        }\r\n      } else {\r\n        setExpression(prev => prev + value);\r\n      }\r\n    } else {\r\n      if (expression.length >= 2 && Utils.isMathOperator(expression[expression.length - 2]) && expression[expression.length - 1] === '-') {\r\n        setExpression(prev => prev.substring(0, prev.length - 2) + value);\r\n      } else if (Utils.isMathOperator(expression[expression.length - 1])) {\r\n        setExpression(prev => prev.substring(0, prev.length - 1) + value)\r\n      } else {\r\n        setExpression(prev => prev + value);\r\n      }\r\n    }\r\n\r\n    setInput(value);\r\n  }\r\n\r\n  const handleEqual = () => {\r\n    let result = '';\r\n    if (expression.length && Utils.isMathOperator(expression[expression.length - 1])) {\r\n      setExpression(prev => prev.substring(0, prev.length - 1));\r\n      result = expression.substring(0, expression.length - 1);\r\n    } else {\r\n      result = Utils.calculate(expression);\r\n    }\r\n\r\n    setAnswer(result);\r\n    setInput(result)\r\n  }\r\n\r\n  const handleClick = (value: string) => {\r\n    if (Utils.isCancel(value)) {\r\n      handleCancel();\r\n    } else if (Utils.isNumber(value)) {\r\n      handleNumber(value);\r\n    } else if (Utils.isDecimal(value)) {\r\n      handleDecimal();\r\n    } else if (Utils.isMathOperator(value)) {\r\n      handleMathOperator(value);\r\n    } else if (Utils.isEqualOperator(value)) {\r\n      handleEqual();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} answer={answer} expression={expression} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}