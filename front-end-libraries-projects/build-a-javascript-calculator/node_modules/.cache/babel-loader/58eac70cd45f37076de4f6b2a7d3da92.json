{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Utils } from \"../../shared/Utils\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [result, setResult] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n  const [infixValue, setInfixValue] = useState(\"(\");\n\n  const handleClick = value => {\n    if (Utils.isCancel(value)) {\n      setInput(\"0\");\n      setInfixValue(\"(\");\n      setResult(\"\");\n    } else if (Utils.isNumber(value)) {\n      setInput(prev => prev.length === 1 && prev === \"0\" ? value : prev + value);\n\n      if (Utils.isMathOperator(input[input.length - 1])) {\n        setInfixValue(prev => prev + value + ')');\n      } else {\n        setInfixValue(prev => prev + value);\n      }\n    } else if (Utils.isDecimal(value) && !input.includes(\".\")) {\n      setInput(prev => prev + value);\n      setInfixValue(prev => prev + value);\n    } else if (Utils.isMathOperator(value)) {\n      const isPreviousAlsoMathOperator = Utils.isMathOperator(input[input.length - 1]);\n\n      if (isPreviousAlsoMathOperator) {\n        const newInput = input.substring(0, input.length - 1) + value;\n        const newInfix = infixValue.substring(0, infixValue.length - 1) + value;\n        setInput(newInput);\n        setInfixValue(newInfix);\n      } else {\n        setInput(input + value);\n      }\n    } else if (Utils.isEqualOperator(value)) {\n      setResult(input + \"=\" + Utils.calculate(input));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      input: input,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"YNacaeB3t6cP/vOIkRB7pvpXyM8=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useState","Utils","DisplayPanel","InputPanel","Calculator","result","setResult","input","setInput","infixValue","setInfixValue","handleClick","value","isCancel","isNumber","prev","length","isMathOperator","isDecimal","includes","isPreviousAlsoMathOperator","newInput","substring","newInfix","isEqualOperator","calculate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [result, setResult] = useState(\"\");\r\n  const [input, setInput] = useState(\"0\");\r\n  const [infixValue, setInfixValue] = useState(\"(\");\r\n\r\n  const handleClick = (value: string) => {\r\n    if (Utils.isCancel(value)) {\r\n      setInput(\"0\");\r\n      setInfixValue(\"(\");\r\n      setResult(\"\");\r\n    } else if (Utils.isNumber(value)) {\r\n      setInput((prev) =>\r\n        prev.length === 1 && prev === \"0\" ? value : prev + value\r\n      );\r\n      if (Utils.isMathOperator(input[input.length - 1])) {\r\n        setInfixValue(prev => prev + value + ')');    \r\n      } else {\r\n        setInfixValue(prev => prev + value);\r\n      }\r\n    } else if (Utils.isDecimal(value) && !input.includes(\".\")) {\r\n      setInput((prev) => prev + value);\r\n      setInfixValue(prev => prev + value);\r\n    } else if (Utils.isMathOperator(value)) {\r\n      const isPreviousAlsoMathOperator = Utils.isMathOperator(\r\n        input[input.length - 1]\r\n      );\r\n      if (isPreviousAlsoMathOperator) {\r\n        const newInput = input.substring(0, input.length - 1) + value;\r\n        const newInfix = infixValue.substring(0, infixValue.length - 1) + value;\r\n        setInput(newInput);\r\n        setInfixValue(newInfix);\r\n      } else {\r\n        setInput(input + value);\r\n      }\r\n    } else if (Utils.isEqualOperator(value)) {\r\n      setResult(input + \"=\" + Utils.calculate(input));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} result={result} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}