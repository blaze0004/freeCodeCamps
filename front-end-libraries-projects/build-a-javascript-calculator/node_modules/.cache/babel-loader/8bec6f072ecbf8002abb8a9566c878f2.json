{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\projects\\\\freecodecamps\\\\front-end-libraries-projects\\\\build-a-javascript-calculator\\\\src\\\\component\\\\Calculator\\\\Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Calculator.css\";\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\nimport InputPanel from \"./InputPanel/InputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [resultHistory, setResultHistory] = useState(0);\n  const [result, setResult] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n\n  const handleClick = value => {\n    if (isDecimal(value) && input.includes(\".\") || result.includes(\".\")) {\n      return;\n    } // if (isEqualOperator(value)) {\n    //   const ans = calculate();\n    //   console.log(result, ans);\n    //   setResult((prev) => `${prev}=${ans}`);\n    // } else if (isNumber(value) || (isDecimal(value) && isNumber(input))) {\n    //   setInput((prev) => prev + value);\n    // } else if (input === \"0\") {\n    //   setInput(value);\n    // } else if (isMathOperator(value)) {\n    //   applyOperator(value);\n    // } else if (isCancel(value)) {\n    //   setInput(\"0\");\n    //   setResult(\"\");\n    // }\n\n\n    if (isEqualOperator(value)) {\n      const ans = calculate();\n      console.log(result, ans);\n      setResult(prev => `${prev}=${ans}`);\n    } else if (isCancel(value)) {\n      setInput('0');\n      setResult('');\n    } else {\n      setInput(prev => prev + value);\n    }\n  };\n\n  const isNumber = value => !Number.isNaN(value);\n\n  const isDecimal = value => value === \".\";\n\n  const isMathOperator = value => [\"+\", \"-\", \"/\", \"*\"].includes(value);\n\n  const isEqualOperator = value => value === \"=\";\n\n  const isCancel = value => value === \"AC\";\n\n  const calculate = () => {\n    return eval(result);\n  };\n\n  const applyOperator = operator => {\n    if (isNumber(result)) {\n      setResult(prev => `${prev}${operator}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayPanel, {\n      input: input,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputPanel, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"mCLHqlEINfuPz4qt7AUneVOJOPY=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/Personal/projects/freecodecamps/front-end-libraries-projects/build-a-javascript-calculator/src/component/Calculator/Calculator.tsx"],"names":["useState","DisplayPanel","InputPanel","Calculator","resultHistory","setResultHistory","result","setResult","input","setInput","handleClick","value","isDecimal","includes","isEqualOperator","ans","calculate","console","log","prev","isCancel","isNumber","Number","isNaN","isMathOperator","eval","applyOperator","operator"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,GAAD,CAAlC;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAmB;AACrC,QAAKC,SAAS,CAACD,KAAD,CAAT,IAAoBH,KAAK,CAACK,QAAN,CAAe,GAAf,CAArB,IAA6CP,MAAM,CAACO,QAAP,CAAgB,GAAhB,CAAjD,EAAuE;AACrE;AACD,KAHoC,CAIrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAIC,eAAe,CAACH,KAAD,CAAnB,EAA4B;AAC1B,YAAMI,GAAG,GAAGC,SAAS,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ,EAAoBS,GAApB;AACAR,MAAAA,SAAS,CAAEY,IAAD,IAAW,GAAEA,IAAK,IAAGJ,GAAI,EAA1B,CAAT;AACD,KAJD,MAIO,IAAIK,QAAQ,CAACT,KAAD,CAAZ,EAAqB;AACxBF,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAHM,MAGA;AACHE,MAAAA,QAAQ,CAACU,IAAI,IAAIA,IAAI,GAAGR,KAAhB,CAAR;AACH;AACF,GA7BD;;AA+BA,QAAMU,QAAQ,GAAIV,KAAD,IAAmB,CAACW,MAAM,CAACC,KAAP,CAAaZ,KAAb,CAArC;;AACA,QAAMC,SAAS,GAAID,KAAD,IAAmBA,KAAK,KAAK,GAA/C;;AACA,QAAMa,cAAc,GAAIb,KAAD,IACrB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBE,QAArB,CAA8BF,KAA9B,CADF;;AAEA,QAAMG,eAAe,GAAIH,KAAD,IAAmBA,KAAK,KAAK,GAArD;;AACA,QAAMS,QAAQ,GAAIT,KAAD,IAAmBA,KAAK,KAAK,IAA9C;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACtB,WAAOS,IAAI,CAACnB,MAAD,CAAX;AACD,GAFD;;AAIA,QAAMoB,aAAa,GAAIC,QAAD,IAAsB;AAC1C,QAAIN,QAAQ,CAACf,MAAD,CAAZ,EAAsB;AACpBC,MAAAA,SAAS,CAAEY,IAAD,IAAW,GAAEA,IAAK,GAAEQ,QAAS,EAA9B,CAAT;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEnB,KAArB;AAA4B,MAAA,MAAM,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3DD;;GAAMP,U;;KAAAA,U;AA6DN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [resultHistory, setResultHistory] = useState(0);\r\n  const [result, setResult] = useState(\"\");\r\n  const [input, setInput] = useState(\"0\");\r\n\r\n  const handleClick = (value: string) => {\r\n    if ((isDecimal(value) && input.includes(\".\")) || result.includes(\".\")) {\r\n      return;\r\n    }\r\n    // if (isEqualOperator(value)) {\r\n    //   const ans = calculate();\r\n    //   console.log(result, ans);\r\n    //   setResult((prev) => `${prev}=${ans}`);\r\n    // } else if (isNumber(value) || (isDecimal(value) && isNumber(input))) {\r\n    //   setInput((prev) => prev + value);\r\n    // } else if (input === \"0\") {\r\n    //   setInput(value);\r\n    // } else if (isMathOperator(value)) {\r\n    //   applyOperator(value);\r\n    // } else if (isCancel(value)) {\r\n    //   setInput(\"0\");\r\n    //   setResult(\"\");\r\n    // }\r\n\r\n    if (isEqualOperator(value)) {\r\n      const ans = calculate();\r\n      console.log(result, ans);\r\n      setResult((prev) => `${prev}=${ans}`);\r\n    } else if (isCancel(value)) {\r\n        setInput('0');\r\n        setResult('');\r\n    } else {\r\n        setInput(prev => prev + value);\r\n    }\r\n  };\r\n\r\n  const isNumber = (value: string) => !Number.isNaN(value);\r\n  const isDecimal = (value: string) => value === \".\";\r\n  const isMathOperator = (value: string) =>\r\n    [\"+\", \"-\", \"/\", \"*\"].includes(value);\r\n  const isEqualOperator = (value: string) => value === \"=\";\r\n  const isCancel = (value: string) => value === \"AC\";\r\n\r\n  const calculate = () => {\r\n    return eval(result);\r\n  };\r\n\r\n  const applyOperator = (operator: string) => {\r\n    if (isNumber(result)) {\r\n      setResult((prev) => `${prev}${operator}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} result={result} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}