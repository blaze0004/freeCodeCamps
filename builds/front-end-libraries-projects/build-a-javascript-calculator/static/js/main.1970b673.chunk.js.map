{"version":3,"sources":["shared/Utils.ts","component/Calculator/DisplayPanel/DisplayPanel.tsx","component/Calculator/InputPanel/InputButton/InputButton.tsx","component/Calculator/InputPanel/InputPanel.tsx","component/Calculator/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Utils","MATH_OPERATORS","isNumber","value","RegExp","test","isDecimal","isMathOperator","includes","isEqualOperator","isCancel","calculate","eval","DisplayPanel","props","id","className","expression","answer","input","InputButton","style","join","onClick","text","defaultProps","InputPanel","buttons","useMemo","map","x","Calculator","useState","setAnswer","setExpression","setInput","prev","length","handleNumber","some","lastIndexOfOperator","Math","max","lastIndexOf","handleDecimal","substring","handleMathOperator","result","handleEqual","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1970b673.chunk.js","sourcesContent":["export class Utils {\r\n    public static MATH_OPERATORS = [\"+\", \"-\", \"/\", \"*\"];\r\n\r\n    public static isNumber = (value: string) => RegExp(/[0-9]/g).test(value);\r\n    public static isDecimal = (value: string) => value === \".\";\r\n    public static isMathOperator = (value: string) =>\r\n      this.MATH_OPERATORS.includes(value);\r\n    public static isEqualOperator = (value: string) => value === \"=\";\r\n    public static isCancel = (value: string) => value === \"AC\";\r\n\r\n    public static calculate = (value: string): string => {\r\n      return eval(value);\r\n    }\r\n  }","import \"./DisplayPanel.css\";\r\n\r\nconst DisplayPanel: React.FC<DisplayPanelProps> = (props) => (\r\n  <div id=\"display-wrapper\" className=\"display-panel\">\r\n    <div className=\"display-panel-input\"> {`${!!props.expression ? props.expression : '0'}${props.answer ? ' =' + props.answer : ''}`}</div>\r\n    <div id='display' className=\"display-panel-input\">{!!props.input ? props.input : '0'}</div>\r\n  </div>\r\n);\r\n\r\ninterface DisplayPanelProps {\r\n  input: string;\r\n  answer: string;\r\n  expression: string;\r\n}\r\n\r\nexport default DisplayPanel;\r\n","import { CSSProperties } from \"react\";\r\nimport \"./InputButton.css\";\r\n\r\nconst InputButton: React.FC<InputButtonProps> = (props) => (\r\n  <div style={props.style} id={props.id} className={['input-button'].join(' ')} onClick={() => props.onClick!(props.value!)}>\r\n    {props.text}\r\n  </div>\r\n);\r\n\r\nInputButton.defaultProps = {\r\n    onClick: () => {},\r\n    text: '0',\r\n    id: 'one'\r\n}\r\n\r\nexport interface InputButtonProps {\r\n  text?: string;\r\n  value?: string;\r\n  id?: string;\r\n  style?: CSSProperties | undefined,\r\n  onClick?: (value: string) => void;\r\n}\r\n\r\nexport default InputButton;\r\n","import { useMemo } from \"react\";\r\nimport InputButton, { InputButtonProps } from \"./InputButton/InputButton\";\r\nimport \"./InputPanel.css\";\r\n\r\nconst InputPanel: React.FC<InputPanelProps> = (props) => {\r\n  const buttons = useMemo(\r\n    (): InputButtonProps[] => [\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"AC\",\r\n        value: \"AC\",\r\n        id: \"clear\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"/\",\r\n        value: \"/\",\r\n        id: \"divide\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"*\",\r\n        value: \"*\",\r\n        id: \"multiply\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"9\",\r\n        value: \"9\",\r\n        id: \"nine\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"8\",\r\n        value: \"8\",\r\n        id: \"eight\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"7\",\r\n        value: \"7\",\r\n        id: \"seven\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"-\",\r\n        value: \"-\",\r\n        id: \"subtract\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"4\",\r\n        value: \"4\",\r\n        id: \"four\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"5\",\r\n        value: \"5\",\r\n        id: \"five\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"6\",\r\n        value: \"6\",\r\n        id: \"six\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"+\",\r\n        value: \"+\",\r\n        id: \"add\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"1\",\r\n        value: \"1\",\r\n        id: \"one\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"2\",\r\n        value: \"2\",\r\n        id: \"two\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"3\",\r\n        value: \"3\",\r\n        id: \"three\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"=\",\r\n        value: \"=\",\r\n        id: \"equals\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \"0\",\r\n        value: \"0\",\r\n        id: \"zero\",\r\n      },\r\n      {\r\n        onClick: props.onClick,\r\n        text: \".\",\r\n        value: \".\",\r\n        id: \"decimal\",\r\n      },\r\n    ],\r\n    [props.onClick]\r\n  );\r\n  return (\r\n    <div className=\"input-panel\">\r\n      <div className=\"input-panel-buttons\">\r\n        {buttons.map((x) => (\r\n          <InputButton key={x.id} {...x} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InputPanelProps {\r\n  onClick: (value: string) => void;\r\n}\r\n\r\nexport default InputPanel;\r\n","import { useState } from \"react\";\r\nimport { Utils } from \"../../shared/Utils\";\r\nimport \"./Calculator.css\";\r\nimport DisplayPanel from \"./DisplayPanel/DisplayPanel\";\r\nimport InputPanel from \"./InputPanel/InputPanel\";\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [expression, setExpression] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleCancel = () => {\r\n    setAnswer(\"\");\r\n    setExpression(\"\");\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleNumber = (value: string) => {\r\n    if (answer) {\r\n      setInput(value);\r\n      setExpression(value);\r\n      setAnswer(\"\");\r\n    } else {\r\n      setInput((prev) =>\r\n        prev.includes(\".\") ||\r\n        (prev.length >= 1 && Utils.isNumber(prev[prev.length - 1]) && prev[prev.length - 1] !== '0')\r\n          ? prev + value\r\n          : value\r\n      );\r\n      setExpression((prev) => prev + value);\r\n    }\r\n  };\r\n\r\n  const handleDecimal = () => {\r\n    const hasNoOperatorOrDecimal =\r\n      !Utils.MATH_OPERATORS.some((x) => expression.includes(x)) &&\r\n      !expression.includes(\".\");\r\n\r\n    if (hasNoOperatorOrDecimal) {\r\n      setExpression((prev) => prev + \".\");\r\n      setInput((prev) =>\r\n        Utils.isNumber(prev[prev.length - 1]) ? prev + \".\" : \".\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const lastIndexOfOperator = Math.max(\r\n      ...Utils.MATH_OPERATORS.map((x) => expression.lastIndexOf(x))\r\n    );\r\n    const lastIndexOfDecimal = expression.lastIndexOf(\".\");\r\n    if (lastIndexOfDecimal < lastIndexOfOperator) {\r\n      setExpression((prev) => prev + \".\");\r\n      setInput((prev) =>\r\n        Utils.isNumber(prev[prev.length - 1]) ? prev + \".\" : \".\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMathOperator = (value: string) => {\r\n    if (answer) {\r\n      setExpression(answer + value);\r\n      setInput(value);\r\n      setAnswer(\"\");\r\n      return;\r\n    }\r\n    if (value === \"-\") {\r\n      if (expression.length) {\r\n        if (\r\n          expression.length >= 2 &&\r\n          Utils.isMathOperator(expression[expression.length - 1]) &&\r\n          Utils.isMathOperator(expression[expression.length - 2])\r\n        ) {\r\n          setExpression((prev) => prev.substring(0, prev.length - 1) + value);\r\n        } else {\r\n          setExpression((prev) => prev + value);\r\n        }\r\n      } else {\r\n        setExpression((prev) => prev + value);\r\n      }\r\n    } else {\r\n      if (\r\n        expression.length >= 2 &&\r\n        Utils.isMathOperator(expression[expression.length - 2]) &&\r\n        expression[expression.length - 1] === \"-\"\r\n      ) {\r\n        setExpression((prev) => prev.substring(0, prev.length - 2) + value);\r\n      } else if (Utils.isMathOperator(expression[expression.length - 1])) {\r\n        setExpression((prev) => prev.substring(0, prev.length - 1) + value);\r\n      } else {\r\n        setExpression((prev) => prev + value);\r\n      }\r\n    }\r\n\r\n    setInput(value);\r\n  };\r\n\r\n  const handleEqual = () => {\r\n    let result = \"\";\r\n    if (\r\n      expression.length &&\r\n      Utils.isMathOperator(expression[expression.length - 1])\r\n    ) {\r\n      setExpression((prev) => prev.substring(0, prev.length - 1));\r\n      result = expression.substring(0, expression.length - 1);\r\n    } else {\r\n      result = Utils.calculate(expression);\r\n    }\r\n\r\n    setAnswer(result);\r\n    setInput(result);\r\n  };\r\n\r\n  const handleClick = (value: string) => {\r\n    if (Utils.isCancel(value)) {\r\n      handleCancel();\r\n    } else if (Utils.isNumber(value)) {\r\n      handleNumber(value);\r\n    } else if (Utils.isDecimal(value)) {\r\n      handleDecimal();\r\n    } else if (Utils.isMathOperator(value)) {\r\n      handleMathOperator(value);\r\n    } else if (Utils.isEqualOperator(value)) {\r\n      handleEqual();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <DisplayPanel input={input} answer={answer} expression={expression} />\r\n      <InputPanel onClick={handleClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\r\nimport Calculator from './component/Calculator/Calculator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}